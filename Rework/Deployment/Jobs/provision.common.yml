parameters:
  ServiceName: ''
  CustomServiceName: ''
  ServiceConnection: ''
  DiscoServiceConnection: ''
  Dependency: ''

jobs:
- job: Provision
  dependsOn: ${{ parameters.Dependency }}
  displayName: 'Provision'

  steps:
  - checkout: self

  - task: AzurePowerShell@3
    displayName: 'Copy secrets to Key Vault'
    inputs:
      azureSubscription: '${{ parameters.ServiceConnection }}'
      ScriptPath: '$(Build.SourcesDirectory)/Rework/Deployment/Scripts/Copy-SecretsToKeyVault.ps1'
      ScriptArguments: '
        -KeyVaultName $(keyVaultName)
        -CertificateKeyVaultName $(certificateKeyVault)
        -CertificatePasswordName $(certificatePasswordName)
        -CertificateSecretName $(certificateSecretName)
        -IdsKeyVaultName $(idsKeyVaultName)
        -IdsUsername $(idsAdminUserName)
        -IdsPassword $(idsAdminSecretName)
        -ExtensionKitServiceName "${{ parameters.ServiceName }}"'
      azurePowerShellVersion: LatestVersion

  - task: AzurePowerShell@3
    displayName: 'Identity Services'
    inputs:
      azureSubscription: '${{ parameters.ServiceConnection }}'
      ScriptPath: '$(Build.SourcesDirectory)/Rework/Deployment/Scripts/Provision-U4IDS.ps1'
      ScriptArguments: '
        -IdsUrl $(idsBaseUrl)
        -IdsAuthenticationMethod "BearerWithVault" 
        -IdsUsername "$(idsAdminUserName)"
        -IdsPassword "$(idsAdminSecretName)"
        -KeyVaultName "$(keyVaultName)"
        -CustomDomain "$(serviceDomain)"
        -CustomServiceName "${{ parameters.CustomServiceName }}"
        -WorkingDirectory "$(Build.SourcesDirectory)/Rework/Deployment/Scripts/Utilities"
        -ExtensionKitSourceSystem "$(ekSourceSystem)"
        -ExtensionKitServiceName "${{ parameters.ServiceName }}"
        -MessageHubInstanceName "$(mhInstanceName)"'
      azurePowerShellVersion: LatestVersion

  - task: AzurePowerShell@3
    displayName: 'Access Management'
    inputs:
      azureSubscription: '${{ parameters.ServiceConnection }}'
      ScriptPath: '$(Build.SourcesDirectory)/Rework/Deployment/Scripts/Provision-U4AM.ps1'
      ScriptArguments: '
        -IdsUrl "$(idsBaseUrl)"
        -AmUrl "$(amApiUrl)"
        -KeyVaultName "$(keyVaultName)"
        -ExtensionKitSourceSystem "$(ekSourceSystem)"
        -ExtensionKitServiceName "${{ parameters.ServiceName }}"
        -AdminTenantId "$(ekAdminTenant)"
        -AdminTenantName "$(ekAdminTenantName)"
        -AdminTenantShortName "$(ekAdminTenantShortName)"
        -AdminTenantLogoUrl "$(ekAdminTenantLogoUrl)"
        -AdminUserId "$(ekAdminUserId)"
        -AdminUserDisplayName "$(ekAdminUserDisplayName)"
        -AdminUserEmail "$(ekAdminUserEmail)"
        -WorkingDirectory "$(Build.SourcesDirectory)/Rework/Deployment/Scripts/Utilities"'
      azurePowerShellVersion: LatestVersion

  - task: AzurePowerShell@3
    displayName: 'Message Hub'
    inputs:
      azureSubscription: '${{ parameters.ServiceConnection }}'
      ScriptPath: '$(Build.SourcesDirectory)/Rework/Deployment/Scripts/Provision-U4MH.ps1'
      ScriptArguments: '
        -IdsUrl "$(idsBaseUrl)"
        -KeyVaultName "$(keyVaultName)"
        -ExtensionKitSourceSystem "$(ekSourceSystem)"
        -ExtensionKitTenant "${{ parameters.ServiceName }}"
        -ExtensionKitServiceName "${{ parameters.ServiceName }}"
        -MessageHubInstanceName "$(mhInstanceName)"
        -MessageHubInstanceUrlDomain "$(mhInstanceDomain)"
        -WorkingDirectory "$(Build.SourcesDirectory)/Rework/Deployment/Scripts/Utilities"'
      azurePowerShellVersion: LatestVersion

  - task: register-source-system@2
    displayName: 'Discovery Service'
    inputs:
      useCustomEnvironment: false 
      environment: $(discoEnvironment)
      azureSubscription: '${{ parameters.DiscoServiceConnection }}'
      dscFile: '$(Build.SourcesDirectory)/Rework/Deployment/Config/sourceSystemConfig.json'
      overrideDictionary: |
        stage = $(discoveryStageName)
        region = $(locationShortcut)
        version = $(serviceBundleVersion).$(Build.BuildNumber)
        extensionsApiUrl = $(extensionsApiUrl)
        flowsApiUrl = $(flowsApiUrl)
        tenantsApiUrl = $(tenantsApiUrl)
        publicApiUrl = $(ekApiUrl)
        flowHistoryUrl = $(flowHistoryApiUrl)
        flowNotificationUrl = $(flowNotificationUrl)
        hibernationUrl = $(hibernationApiUrl)
        orchestratorUrl = $(orchestratorUrl)
        portalUrl = $(portalUrl)
        tafUrl = $(tafUrl)
        tenantConsumptionUpdaterUrl = $(tenantConsumptionUpdaterUrl)
        xsltProcessorUrl = $(xsltProcessorUrl)
        mhTriggerUrl = $(messageHubTriggerUrl)
        schedulerTriggerUrl = $(schedulerTriggerUrl)
        webhookTriggerUrl = $(webhookV2Url)
        actionUrlPrefix = $(actionUrlPrefix)
        actionUrlSuffix = $(actionUrlSuffix)

  - task: AzurePowerShell@3
    displayName: 'Send Grid'
    inputs:
      azureSubscription: '${{ parameters.ServiceConnection }}'
      ScriptPath: '$(Build.SourcesDirectory)/Rework/Deployment/Scripts/Provision-SendGrid.ps1'
      ScriptArguments: '
        -KeyVaultName "$(keyVaultName)"
        -ApiKeyName "${{ parameters.ServiceName }}"
        -SharedKeyVaultName "$(sharedKeyVaultName)"
        -ProvisioningApiKeyName "$(emailKeySecretName)"'
      azurePowerShellVersion: LatestVersion